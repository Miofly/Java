<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toby.pay.dao.VRateDAO">
  <resultMap id="BaseResultMap" type="com.toby.pay.model.mybatis.VRate">
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="channel_key" jdbcType="VARCHAR" property="channelKey" />
    <result column="channel_ori_name" jdbcType="VARCHAR" property="channelOriName" />
    <result column="channel_show_name" jdbcType="VARCHAR" property="channelShowName" />
    <result column="channel_status" jdbcType="INTEGER" property="channelStatus" />
    <result column="channel_type" jdbcType="INTEGER" property="channelType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    merchant_id, channel_id, rate, `status`, channel_key, channel_ori_name, channel_show_name, 
    channel_status, channel_type
  </sql>
  <select id="selectByExample" parameterType="com.toby.pay.model.mybatis.VRateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.toby.pay.model.mybatis.VRateExample">
    delete from v_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.toby.pay.model.mybatis.VRate">
    insert into v_rate (merchant_id, channel_id, rate, 
      `status`, channel_key, channel_ori_name, 
      channel_show_name, channel_status, channel_type
      )
    values (#{merchantId,jdbcType=INTEGER}, #{channelId,jdbcType=INTEGER}, #{rate,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{channelKey,jdbcType=VARCHAR}, #{channelOriName,jdbcType=VARCHAR}, 
      #{channelShowName,jdbcType=VARCHAR}, #{channelStatus,jdbcType=INTEGER}, #{channelType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.toby.pay.model.mybatis.VRate">
    insert into v_rate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="channelKey != null">
        channel_key,
      </if>
      <if test="channelOriName != null">
        channel_ori_name,
      </if>
      <if test="channelShowName != null">
        channel_show_name,
      </if>
      <if test="channelStatus != null">
        channel_status,
      </if>
      <if test="channelType != null">
        channel_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="channelKey != null">
        #{channelKey,jdbcType=VARCHAR},
      </if>
      <if test="channelOriName != null">
        #{channelOriName,jdbcType=VARCHAR},
      </if>
      <if test="channelShowName != null">
        #{channelShowName,jdbcType=VARCHAR},
      </if>
      <if test="channelStatus != null">
        #{channelStatus,jdbcType=INTEGER},
      </if>
      <if test="channelType != null">
        #{channelType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.toby.pay.model.mybatis.VRateExample" resultType="java.lang.Long">
    select count(*) from v_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update v_rate
    <set>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.channelKey != null">
        channel_key = #{record.channelKey,jdbcType=VARCHAR},
      </if>
      <if test="record.channelOriName != null">
        channel_ori_name = #{record.channelOriName,jdbcType=VARCHAR},
      </if>
      <if test="record.channelShowName != null">
        channel_show_name = #{record.channelShowName,jdbcType=VARCHAR},
      </if>
      <if test="record.channelStatus != null">
        channel_status = #{record.channelStatus,jdbcType=INTEGER},
      </if>
      <if test="record.channelType != null">
        channel_type = #{record.channelType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update v_rate
    set merchant_id = #{record.merchantId,jdbcType=INTEGER},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      channel_key = #{record.channelKey,jdbcType=VARCHAR},
      channel_ori_name = #{record.channelOriName,jdbcType=VARCHAR},
      channel_show_name = #{record.channelShowName,jdbcType=VARCHAR},
      channel_status = #{record.channelStatus,jdbcType=INTEGER},
      channel_type = #{record.channelType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>