<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toby.pay.dao.RateDAO">
  <resultMap id="BaseResultMap" type="com.toby.pay.model.mybatis.Rate">
    <id column="channel_id" jdbcType="INTEGER" property="channelId" />
    <id column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    channel_id, merchant_id, rate, `status`
  </sql>
  <select id="selectByExample" parameterType="com.toby.pay.model.mybatis.RateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.toby.pay.model.mybatis.RateKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rate
    where channel_id = #{channelId,jdbcType=INTEGER}
      and merchant_id = #{merchantId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.toby.pay.model.mybatis.RateKey">
    delete from rate
    where channel_id = #{channelId,jdbcType=INTEGER}
      and merchant_id = #{merchantId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.toby.pay.model.mybatis.RateExample">
    delete from rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.toby.pay.model.mybatis.Rate">
    insert into rate (channel_id, merchant_id, rate, 
      `status`)
    values (#{channelId,jdbcType=INTEGER}, #{merchantId,jdbcType=INTEGER}, #{rate,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.toby.pay.model.mybatis.Rate">
    insert into rate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.toby.pay.model.mybatis.RateExample" resultType="java.lang.Long">
    select count(*) from rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rate
    <set>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rate
    set channel_id = #{record.channelId,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      rate = #{record.rate,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.toby.pay.model.mybatis.Rate">
    update rate
    <set>
      <if test="rate != null">
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where channel_id = #{channelId,jdbcType=INTEGER}
      and merchant_id = #{merchantId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.toby.pay.model.mybatis.Rate">
    update rate
    set rate = #{rate,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where channel_id = #{channelId,jdbcType=INTEGER}
      and merchant_id = #{merchantId,jdbcType=INTEGER}
  </update>
</mapper>