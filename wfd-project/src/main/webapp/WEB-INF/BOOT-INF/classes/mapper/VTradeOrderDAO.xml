<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toby.pay.dao.VTradeOrderDAO">
    <resultMap id="BaseResultMap" type="com.toby.pay.model.mybatis.VTradeOrder">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="superior_order_id" jdbcType="VARCHAR" property="superiorOrderId"/>
        <result column="platform_order_id" jdbcType="VARCHAR" property="platformOrderId"/>
        <result column="merchant_order_id" jdbcType="VARCHAR" property="merchantOrderId"/>
        <result column="merchant_id" jdbcType="INTEGER" property="merchantId"/>
        <result column="account_id" jdbcType="INTEGER" property="accountId"/>
        <result column="amount" jdbcType="DECIMAL" property="amount"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="super_notify_time" jdbcType="TIMESTAMP" property="superNotifyTime"/>
        <result column="platform_notify_time" jdbcType="TIMESTAMP" property="platformNotifyTime"/>
        <result column="pay_status" jdbcType="INTEGER" property="payStatus"/>
        <result column="notify_status" jdbcType="INTEGER" property="notifyStatus"/>
        <result column="return_url" jdbcType="VARCHAR" property="returnUrl"/>
        <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl"/>
        <result column="body" jdbcType="VARCHAR" property="body"/>
        <result column="rate" jdbcType="INTEGER" property="rate"/>
        <result column="charge" jdbcType="DECIMAL" property="charge"/>
        <result column="notify_count" jdbcType="INTEGER" property="notifyCount"/>
        <result column="charge_status" jdbcType="INTEGER" property="chargeStatus"/>
        <result column="buyer_logon_id" jdbcType="VARCHAR" property="buyerLogonId"/>
        <result column="merchant_account" jdbcType="VARCHAR" property="merchantAccount"/>
        <result column="merchant_name" jdbcType="VARCHAR" property="merchantName"/>
        <result column="merchant_telephone" jdbcType="VARCHAR" property="merchantTelephone"/>
        <result column="merchant_balance" jdbcType="DECIMAL" property="merchantBalance"/>
        <result column="merchant_status" jdbcType="INTEGER" property="merchantStatus"/>
        <result column="agent_id" jdbcType="INTEGER" property="agentId"/>
        <result column="agent_account" jdbcType="VARCHAR" property="agentAccount"/>
        <result column="agent_name" jdbcType="VARCHAR" property="agentName"/>
        <result column="agent_telephone" jdbcType="VARCHAR" property="agentTelephone"/>
        <result column="agent_status" jdbcType="INTEGER" property="agentStatus"/>
        <result column="account_name" jdbcType="VARCHAR" property="accountName"/>
        <result column="channel_id" jdbcType="INTEGER" property="channelId"/>
        <result column="channel_key" jdbcType="VARCHAR" property="channelKey"/>
        <result column="channel_ori_name" jdbcType="VARCHAR" property="channelOriName"/>
        <result column="channel_show_name" jdbcType="VARCHAR" property="channelShowName"/>
        <result column="channel_status" jdbcType="INTEGER" property="channelStatus"/>
        <result column="channel_type" jdbcType="INTEGER" property="channelType"/>
        <result column="agent_charge" jdbcType="DECIMAL" property="agentCharge"/>
        <result column="platform_charge" jdbcType="DECIMAL" property="platformCharge"/>
        <result column="cost_charge" jdbcType="DECIMAL" property="costCharge"/>
        <result column="account_super_app_id" jdbcType="VARCHAR" property="accountSuperAppId"/>
        <result column="account_super_mch_id" jdbcType="VARCHAR" property="accountSuperMchId"/>
        <result column="account_super_sub_appid" jdbcType="VARCHAR" property="accountSuperSubAppid"/>
        <result column="account_super_sub_mch_id" jdbcType="VARCHAR" property="accountSuperSubMchId"/>
        <result column="account_super_app_auth_token" jdbcType="VARCHAR" property="accountSuperAppAuthToken"/>
        <result column="account_super_store_id" jdbcType="VARCHAR" property="accountSuperStoreId"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.toby.pay.model.mybatis.VTradeOrderWithBLOBs">
        <result column="account_super_public_key" jdbcType="LONGVARCHAR" property="accountSuperPublicKey"/>
        <result column="account_super_merchant_public_key" jdbcType="LONGVARCHAR"
                property="accountSuperMerchantPublicKey"/>
        <result column="account_super_merchant_private_key" jdbcType="LONGVARCHAR"
                property="accountSuperMerchantPrivateKey"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, superior_order_id, platform_order_id, merchant_order_id, merchant_id, account_id, 
    amount, create_time, super_notify_time, platform_notify_time, pay_status, notify_status, 
    return_url, notify_url, body, rate, charge, notify_count, charge_status, buyer_logon_id, 
    merchant_account, merchant_name, merchant_telephone, merchant_balance, merchant_status, 
    agent_id, agent_account, agent_name, agent_telephone, agent_status, account_name, 
    channel_id, channel_key, channel_ori_name, channel_show_name, channel_status, channel_type, 
    agent_charge, platform_charge, cost_charge, account_super_app_id, account_super_mch_id, 
    account_super_sub_appid, account_super_sub_mch_id, account_super_app_auth_token, 
    account_super_store_id, ip
  </sql>
    <sql id="Blob_Column_List">
    account_super_public_key, account_super_merchant_public_key, account_super_merchant_private_key
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample">
        delete from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.toby.pay.model.mybatis.VTradeOrderWithBLOBs"
            useGeneratedKeys="true">
    insert into v_trade_order (superior_order_id, platform_order_id, 
      merchant_order_id, merchant_id, account_id, 
      amount, create_time, super_notify_time, 
      platform_notify_time, pay_status, notify_status, 
      return_url, notify_url, body, 
      rate, charge, notify_count, 
      charge_status, buyer_logon_id, merchant_account, 
      merchant_name, merchant_telephone, merchant_balance, 
      merchant_status, agent_id, agent_account, 
      agent_name, agent_telephone, agent_status, 
      account_name, channel_id, channel_key, 
      channel_ori_name, channel_show_name, channel_status, 
      channel_type, agent_charge, platform_charge, 
      cost_charge, account_super_app_id, account_super_mch_id, 
      account_super_sub_appid, account_super_sub_mch_id, 
      account_super_app_auth_token, account_super_store_id, 
      ip, account_super_public_key, account_super_merchant_public_key, 
      account_super_merchant_private_key)
    values (#{superiorOrderId,jdbcType=VARCHAR}, #{platformOrderId,jdbcType=VARCHAR}, 
      #{merchantOrderId,jdbcType=VARCHAR}, #{merchantId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, 
      #{amount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{superNotifyTime,jdbcType=TIMESTAMP}, 
      #{platformNotifyTime,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}, #{notifyStatus,jdbcType=INTEGER}, 
      #{returnUrl,jdbcType=VARCHAR}, #{notifyUrl,jdbcType=VARCHAR}, #{body,jdbcType=VARCHAR}, 
      #{rate,jdbcType=INTEGER}, #{charge,jdbcType=DECIMAL}, #{notifyCount,jdbcType=INTEGER}, 
      #{chargeStatus,jdbcType=INTEGER}, #{buyerLogonId,jdbcType=VARCHAR}, #{merchantAccount,jdbcType=VARCHAR}, 
      #{merchantName,jdbcType=VARCHAR}, #{merchantTelephone,jdbcType=VARCHAR}, #{merchantBalance,jdbcType=DECIMAL}, 
      #{merchantStatus,jdbcType=INTEGER}, #{agentId,jdbcType=INTEGER}, #{agentAccount,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{agentTelephone,jdbcType=VARCHAR}, #{agentStatus,jdbcType=INTEGER}, 
      #{accountName,jdbcType=VARCHAR}, #{channelId,jdbcType=INTEGER}, #{channelKey,jdbcType=VARCHAR}, 
      #{channelOriName,jdbcType=VARCHAR}, #{channelShowName,jdbcType=VARCHAR}, #{channelStatus,jdbcType=INTEGER}, 
      #{channelType,jdbcType=INTEGER}, #{agentCharge,jdbcType=DECIMAL}, #{platformCharge,jdbcType=DECIMAL}, 
      #{costCharge,jdbcType=DECIMAL}, #{accountSuperAppId,jdbcType=VARCHAR}, #{accountSuperMchId,jdbcType=VARCHAR}, 
      #{accountSuperSubAppid,jdbcType=VARCHAR}, #{accountSuperSubMchId,jdbcType=VARCHAR}, 
      #{accountSuperAppAuthToken,jdbcType=VARCHAR}, #{accountSuperStoreId,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{accountSuperPublicKey,jdbcType=LONGVARCHAR}, #{accountSuperMerchantPublicKey,jdbcType=LONGVARCHAR}, 
      #{accountSuperMerchantPrivateKey,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.toby.pay.model.mybatis.VTradeOrderWithBLOBs" useGeneratedKeys="true">
        insert into v_trade_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="superiorOrderId != null">
                superior_order_id,
            </if>
            <if test="platformOrderId != null">
                platform_order_id,
            </if>
            <if test="merchantOrderId != null">
                merchant_order_id,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
            <if test="accountId != null">
                account_id,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="superNotifyTime != null">
                super_notify_time,
            </if>
            <if test="platformNotifyTime != null">
                platform_notify_time,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="notifyStatus != null">
                notify_status,
            </if>
            <if test="returnUrl != null">
                return_url,
            </if>
            <if test="notifyUrl != null">
                notify_url,
            </if>
            <if test="body != null">
                body,
            </if>
            <if test="rate != null">
                rate,
            </if>
            <if test="charge != null">
                charge,
            </if>
            <if test="notifyCount != null">
                notify_count,
            </if>
            <if test="chargeStatus != null">
                charge_status,
            </if>
            <if test="buyerLogonId != null">
                buyer_logon_id,
            </if>
            <if test="merchantAccount != null">
                merchant_account,
            </if>
            <if test="merchantName != null">
                merchant_name,
            </if>
            <if test="merchantTelephone != null">
                merchant_telephone,
            </if>
            <if test="merchantBalance != null">
                merchant_balance,
            </if>
            <if test="merchantStatus != null">
                merchant_status,
            </if>
            <if test="agentId != null">
                agent_id,
            </if>
            <if test="agentAccount != null">
                agent_account,
            </if>
            <if test="agentName != null">
                agent_name,
            </if>
            <if test="agentTelephone != null">
                agent_telephone,
            </if>
            <if test="agentStatus != null">
                agent_status,
            </if>
            <if test="accountName != null">
                account_name,
            </if>
            <if test="channelId != null">
                channel_id,
            </if>
            <if test="channelKey != null">
                channel_key,
            </if>
            <if test="channelOriName != null">
                channel_ori_name,
            </if>
            <if test="channelShowName != null">
                channel_show_name,
            </if>
            <if test="channelStatus != null">
                channel_status,
            </if>
            <if test="channelType != null">
                channel_type,
            </if>
            <if test="agentCharge != null">
                agent_charge,
            </if>
            <if test="platformCharge != null">
                platform_charge,
            </if>
            <if test="costCharge != null">
                cost_charge,
            </if>
            <if test="accountSuperAppId != null">
                account_super_app_id,
            </if>
            <if test="accountSuperMchId != null">
                account_super_mch_id,
            </if>
            <if test="accountSuperSubAppid != null">
                account_super_sub_appid,
            </if>
            <if test="accountSuperSubMchId != null">
                account_super_sub_mch_id,
            </if>
            <if test="accountSuperAppAuthToken != null">
                account_super_app_auth_token,
            </if>
            <if test="accountSuperStoreId != null">
                account_super_store_id,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="accountSuperPublicKey != null">
                account_super_public_key,
            </if>
            <if test="accountSuperMerchantPublicKey != null">
                account_super_merchant_public_key,
            </if>
            <if test="accountSuperMerchantPrivateKey != null">
                account_super_merchant_private_key,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="superiorOrderId != null">
                #{superiorOrderId,jdbcType=VARCHAR},
            </if>
            <if test="platformOrderId != null">
                #{platformOrderId,jdbcType=VARCHAR},
            </if>
            <if test="merchantOrderId != null">
                #{merchantOrderId,jdbcType=VARCHAR},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=INTEGER},
            </if>
            <if test="accountId != null">
                #{accountId,jdbcType=INTEGER},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="superNotifyTime != null">
                #{superNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="platformNotifyTime != null">
                #{platformNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=INTEGER},
            </if>
            <if test="notifyStatus != null">
                #{notifyStatus,jdbcType=INTEGER},
            </if>
            <if test="returnUrl != null">
                #{returnUrl,jdbcType=VARCHAR},
            </if>
            <if test="notifyUrl != null">
                #{notifyUrl,jdbcType=VARCHAR},
            </if>
            <if test="body != null">
                #{body,jdbcType=VARCHAR},
            </if>
            <if test="rate != null">
                #{rate,jdbcType=INTEGER},
            </if>
            <if test="charge != null">
                #{charge,jdbcType=DECIMAL},
            </if>
            <if test="notifyCount != null">
                #{notifyCount,jdbcType=INTEGER},
            </if>
            <if test="chargeStatus != null">
                #{chargeStatus,jdbcType=INTEGER},
            </if>
            <if test="buyerLogonId != null">
                #{buyerLogonId,jdbcType=VARCHAR},
            </if>
            <if test="merchantAccount != null">
                #{merchantAccount,jdbcType=VARCHAR},
            </if>
            <if test="merchantName != null">
                #{merchantName,jdbcType=VARCHAR},
            </if>
            <if test="merchantTelephone != null">
                #{merchantTelephone,jdbcType=VARCHAR},
            </if>
            <if test="merchantBalance != null">
                #{merchantBalance,jdbcType=DECIMAL},
            </if>
            <if test="merchantStatus != null">
                #{merchantStatus,jdbcType=INTEGER},
            </if>
            <if test="agentId != null">
                #{agentId,jdbcType=INTEGER},
            </if>
            <if test="agentAccount != null">
                #{agentAccount,jdbcType=VARCHAR},
            </if>
            <if test="agentName != null">
                #{agentName,jdbcType=VARCHAR},
            </if>
            <if test="agentTelephone != null">
                #{agentTelephone,jdbcType=VARCHAR},
            </if>
            <if test="agentStatus != null">
                #{agentStatus,jdbcType=INTEGER},
            </if>
            <if test="accountName != null">
                #{accountName,jdbcType=VARCHAR},
            </if>
            <if test="channelId != null">
                #{channelId,jdbcType=INTEGER},
            </if>
            <if test="channelKey != null">
                #{channelKey,jdbcType=VARCHAR},
            </if>
            <if test="channelOriName != null">
                #{channelOriName,jdbcType=VARCHAR},
            </if>
            <if test="channelShowName != null">
                #{channelShowName,jdbcType=VARCHAR},
            </if>
            <if test="channelStatus != null">
                #{channelStatus,jdbcType=INTEGER},
            </if>
            <if test="channelType != null">
                #{channelType,jdbcType=INTEGER},
            </if>
            <if test="agentCharge != null">
                #{agentCharge,jdbcType=DECIMAL},
            </if>
            <if test="platformCharge != null">
                #{platformCharge,jdbcType=DECIMAL},
            </if>
            <if test="costCharge != null">
                #{costCharge,jdbcType=DECIMAL},
            </if>
            <if test="accountSuperAppId != null">
                #{accountSuperAppId,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperMchId != null">
                #{accountSuperMchId,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperSubAppid != null">
                #{accountSuperSubAppid,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperSubMchId != null">
                #{accountSuperSubMchId,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperAppAuthToken != null">
                #{accountSuperAppAuthToken,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperStoreId != null">
                #{accountSuperStoreId,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="accountSuperPublicKey != null">
                #{accountSuperPublicKey,jdbcType=LONGVARCHAR},
            </if>
            <if test="accountSuperMerchantPublicKey != null">
                #{accountSuperMerchantPublicKey,jdbcType=LONGVARCHAR},
            </if>
            <if test="accountSuperMerchantPrivateKey != null">
                #{accountSuperMerchantPrivateKey,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="java.lang.Long">
        select count(*) from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update v_trade_order
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.superiorOrderId != null">
                superior_order_id = #{record.superiorOrderId,jdbcType=VARCHAR},
            </if>
            <if test="record.platformOrderId != null">
                platform_order_id = #{record.platformOrderId,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantOrderId != null">
                merchant_order_id = #{record.merchantOrderId,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantId != null">
                merchant_id = #{record.merchantId,jdbcType=INTEGER},
            </if>
            <if test="record.accountId != null">
                account_id = #{record.accountId,jdbcType=INTEGER},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.superNotifyTime != null">
                super_notify_time = #{record.superNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.platformNotifyTime != null">
                platform_notify_time = #{record.platformNotifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.payStatus != null">
                pay_status = #{record.payStatus,jdbcType=INTEGER},
            </if>
            <if test="record.notifyStatus != null">
                notify_status = #{record.notifyStatus,jdbcType=INTEGER},
            </if>
            <if test="record.returnUrl != null">
                return_url = #{record.returnUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.notifyUrl != null">
                notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.body != null">
                body = #{record.body,jdbcType=VARCHAR},
            </if>
            <if test="record.rate != null">
                rate = #{record.rate,jdbcType=INTEGER},
            </if>
            <if test="record.charge != null">
                charge = #{record.charge,jdbcType=DECIMAL},
            </if>
            <if test="record.notifyCount != null">
                notify_count = #{record.notifyCount,jdbcType=INTEGER},
            </if>
            <if test="record.chargeStatus != null">
                charge_status = #{record.chargeStatus,jdbcType=INTEGER},
            </if>
            <if test="record.buyerLogonId != null">
                buyer_logon_id = #{record.buyerLogonId,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantAccount != null">
                merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantName != null">
                merchant_name = #{record.merchantName,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantTelephone != null">
                merchant_telephone = #{record.merchantTelephone,jdbcType=VARCHAR},
            </if>
            <if test="record.merchantBalance != null">
                merchant_balance = #{record.merchantBalance,jdbcType=DECIMAL},
            </if>
            <if test="record.merchantStatus != null">
                merchant_status = #{record.merchantStatus,jdbcType=INTEGER},
            </if>
            <if test="record.agentId != null">
                agent_id = #{record.agentId,jdbcType=INTEGER},
            </if>
            <if test="record.agentAccount != null">
                agent_account = #{record.agentAccount,jdbcType=VARCHAR},
            </if>
            <if test="record.agentName != null">
                agent_name = #{record.agentName,jdbcType=VARCHAR},
            </if>
            <if test="record.agentTelephone != null">
                agent_telephone = #{record.agentTelephone,jdbcType=VARCHAR},
            </if>
            <if test="record.agentStatus != null">
                agent_status = #{record.agentStatus,jdbcType=INTEGER},
            </if>
            <if test="record.accountName != null">
                account_name = #{record.accountName,jdbcType=VARCHAR},
            </if>
            <if test="record.channelId != null">
                channel_id = #{record.channelId,jdbcType=INTEGER},
            </if>
            <if test="record.channelKey != null">
                channel_key = #{record.channelKey,jdbcType=VARCHAR},
            </if>
            <if test="record.channelOriName != null">
                channel_ori_name = #{record.channelOriName,jdbcType=VARCHAR},
            </if>
            <if test="record.channelShowName != null">
                channel_show_name = #{record.channelShowName,jdbcType=VARCHAR},
            </if>
            <if test="record.channelStatus != null">
                channel_status = #{record.channelStatus,jdbcType=INTEGER},
            </if>
            <if test="record.channelType != null">
                channel_type = #{record.channelType,jdbcType=INTEGER},
            </if>
            <if test="record.agentCharge != null">
                agent_charge = #{record.agentCharge,jdbcType=DECIMAL},
            </if>
            <if test="record.platformCharge != null">
                platform_charge = #{record.platformCharge,jdbcType=DECIMAL},
            </if>
            <if test="record.costCharge != null">
                cost_charge = #{record.costCharge,jdbcType=DECIMAL},
            </if>
            <if test="record.accountSuperAppId != null">
                account_super_app_id = #{record.accountSuperAppId,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperMchId != null">
                account_super_mch_id = #{record.accountSuperMchId,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperSubAppid != null">
                account_super_sub_appid = #{record.accountSuperSubAppid,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperSubMchId != null">
                account_super_sub_mch_id = #{record.accountSuperSubMchId,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperAppAuthToken != null">
                account_super_app_auth_token = #{record.accountSuperAppAuthToken,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperStoreId != null">
                account_super_store_id = #{record.accountSuperStoreId,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.accountSuperPublicKey != null">
                account_super_public_key = #{record.accountSuperPublicKey,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.accountSuperMerchantPublicKey != null">
                account_super_merchant_public_key = #{record.accountSuperMerchantPublicKey,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.accountSuperMerchantPrivateKey != null">
                account_super_merchant_private_key = #{record.accountSuperMerchantPrivateKey,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update v_trade_order
        set id = #{record.id,jdbcType=INTEGER},
        superior_order_id = #{record.superiorOrderId,jdbcType=VARCHAR},
        platform_order_id = #{record.platformOrderId,jdbcType=VARCHAR},
        merchant_order_id = #{record.merchantOrderId,jdbcType=VARCHAR},
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
        account_id = #{record.accountId,jdbcType=INTEGER},
        amount = #{record.amount,jdbcType=DECIMAL},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        super_notify_time = #{record.superNotifyTime,jdbcType=TIMESTAMP},
        platform_notify_time = #{record.platformNotifyTime,jdbcType=TIMESTAMP},
        pay_status = #{record.payStatus,jdbcType=INTEGER},
        notify_status = #{record.notifyStatus,jdbcType=INTEGER},
        return_url = #{record.returnUrl,jdbcType=VARCHAR},
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
        body = #{record.body,jdbcType=VARCHAR},
        rate = #{record.rate,jdbcType=INTEGER},
        charge = #{record.charge,jdbcType=DECIMAL},
        notify_count = #{record.notifyCount,jdbcType=INTEGER},
        charge_status = #{record.chargeStatus,jdbcType=INTEGER},
        buyer_logon_id = #{record.buyerLogonId,jdbcType=VARCHAR},
        merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
        merchant_name = #{record.merchantName,jdbcType=VARCHAR},
        merchant_telephone = #{record.merchantTelephone,jdbcType=VARCHAR},
        merchant_balance = #{record.merchantBalance,jdbcType=DECIMAL},
        merchant_status = #{record.merchantStatus,jdbcType=INTEGER},
        agent_id = #{record.agentId,jdbcType=INTEGER},
        agent_account = #{record.agentAccount,jdbcType=VARCHAR},
        agent_name = #{record.agentName,jdbcType=VARCHAR},
        agent_telephone = #{record.agentTelephone,jdbcType=VARCHAR},
        agent_status = #{record.agentStatus,jdbcType=INTEGER},
        account_name = #{record.accountName,jdbcType=VARCHAR},
        channel_id = #{record.channelId,jdbcType=INTEGER},
        channel_key = #{record.channelKey,jdbcType=VARCHAR},
        channel_ori_name = #{record.channelOriName,jdbcType=VARCHAR},
        channel_show_name = #{record.channelShowName,jdbcType=VARCHAR},
        channel_status = #{record.channelStatus,jdbcType=INTEGER},
        channel_type = #{record.channelType,jdbcType=INTEGER},
        agent_charge = #{record.agentCharge,jdbcType=DECIMAL},
        platform_charge = #{record.platformCharge,jdbcType=DECIMAL},
        cost_charge = #{record.costCharge,jdbcType=DECIMAL},
        account_super_app_id = #{record.accountSuperAppId,jdbcType=VARCHAR},
        account_super_mch_id = #{record.accountSuperMchId,jdbcType=VARCHAR},
        account_super_sub_appid = #{record.accountSuperSubAppid,jdbcType=VARCHAR},
        account_super_sub_mch_id = #{record.accountSuperSubMchId,jdbcType=VARCHAR},
        account_super_app_auth_token = #{record.accountSuperAppAuthToken,jdbcType=VARCHAR},
        account_super_store_id = #{record.accountSuperStoreId,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        account_super_public_key = #{record.accountSuperPublicKey,jdbcType=LONGVARCHAR},
        account_super_merchant_public_key = #{record.accountSuperMerchantPublicKey,jdbcType=LONGVARCHAR},
        account_super_merchant_private_key = #{record.accountSuperMerchantPrivateKey,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update v_trade_order
        set id = #{record.id,jdbcType=INTEGER},
        superior_order_id = #{record.superiorOrderId,jdbcType=VARCHAR},
        platform_order_id = #{record.platformOrderId,jdbcType=VARCHAR},
        merchant_order_id = #{record.merchantOrderId,jdbcType=VARCHAR},
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
        account_id = #{record.accountId,jdbcType=INTEGER},
        amount = #{record.amount,jdbcType=DECIMAL},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        super_notify_time = #{record.superNotifyTime,jdbcType=TIMESTAMP},
        platform_notify_time = #{record.platformNotifyTime,jdbcType=TIMESTAMP},
        pay_status = #{record.payStatus,jdbcType=INTEGER},
        notify_status = #{record.notifyStatus,jdbcType=INTEGER},
        return_url = #{record.returnUrl,jdbcType=VARCHAR},
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
        body = #{record.body,jdbcType=VARCHAR},
        rate = #{record.rate,jdbcType=INTEGER},
        charge = #{record.charge,jdbcType=DECIMAL},
        notify_count = #{record.notifyCount,jdbcType=INTEGER},
        charge_status = #{record.chargeStatus,jdbcType=INTEGER},
        buyer_logon_id = #{record.buyerLogonId,jdbcType=VARCHAR},
        merchant_account = #{record.merchantAccount,jdbcType=VARCHAR},
        merchant_name = #{record.merchantName,jdbcType=VARCHAR},
        merchant_telephone = #{record.merchantTelephone,jdbcType=VARCHAR},
        merchant_balance = #{record.merchantBalance,jdbcType=DECIMAL},
        merchant_status = #{record.merchantStatus,jdbcType=INTEGER},
        agent_id = #{record.agentId,jdbcType=INTEGER},
        agent_account = #{record.agentAccount,jdbcType=VARCHAR},
        agent_name = #{record.agentName,jdbcType=VARCHAR},
        agent_telephone = #{record.agentTelephone,jdbcType=VARCHAR},
        agent_status = #{record.agentStatus,jdbcType=INTEGER},
        account_name = #{record.accountName,jdbcType=VARCHAR},
        channel_id = #{record.channelId,jdbcType=INTEGER},
        channel_key = #{record.channelKey,jdbcType=VARCHAR},
        channel_ori_name = #{record.channelOriName,jdbcType=VARCHAR},
        channel_show_name = #{record.channelShowName,jdbcType=VARCHAR},
        channel_status = #{record.channelStatus,jdbcType=INTEGER},
        channel_type = #{record.channelType,jdbcType=INTEGER},
        agent_charge = #{record.agentCharge,jdbcType=DECIMAL},
        platform_charge = #{record.platformCharge,jdbcType=DECIMAL},
        cost_charge = #{record.costCharge,jdbcType=DECIMAL},
        account_super_app_id = #{record.accountSuperAppId,jdbcType=VARCHAR},
        account_super_mch_id = #{record.accountSuperMchId,jdbcType=VARCHAR},
        account_super_sub_appid = #{record.accountSuperSubAppid,jdbcType=VARCHAR},
        account_super_sub_mch_id = #{record.accountSuperSubMchId,jdbcType=VARCHAR},
        account_super_app_auth_token = #{record.accountSuperAppAuthToken,jdbcType=VARCHAR},
        account_super_store_id = #{record.accountSuperStoreId,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <select id="sumByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="com.alibaba.fastjson.JSONObject">
        select IFNULL(sum(amount),0) amount,IFNULL(sum(charge),0) charge,IFNULL(sum(cost_charge),0)
        cost_charge,IFNULL(sum(agent_charge),0)
        agent_charge,IFNULL(sum(platform_charge),0) platform_charge,IFNULL(sum(cost_charge),0) cost_charge
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="statisticalMerchantByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="com.alibaba.fastjson.JSONObject">
        select merchant_id,merchant_name,agent_id,agent_name, IFNULL(sum(amount),0) totalAmount,IFNULL(sum(charge),0)
        totalCharge,IFNULL(sum(cost_charge),0) cost_charge,IFNULL(sum(agent_charge),0)
        agent_charge,IFNULL(sum(platform_charge),0)
        platform_charge,IFNULL(sum(cost_charge),0) cost_charge
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY merchant_id
        ORDER BY totalAmount DESC,totalCharge DESC
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="countStatisticalMerchantByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="java.lang.Long">
        select count(*) from (
        select IFNULL(sum(amount),0) totalAmount
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY merchant_id
        ) result
    </select>
    <select id="statisticalAccountByExample" parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="com.alibaba.fastjson.JSONObject">
        select
        merchant_id,merchant_name,account_id,account_name,agent_id,agent_name,IFNULL(sum(amount),0)
        totalAmount,IFNULL(sum(charge),0) totalCharge,IFNULL(sum(cost_charge),0) cost_charge,IFNULL(sum(agent_charge),0)
        agent_charge,IFNULL(sum(platform_charge),0) platform_charge,IFNULL(sum(cost_charge),0) cost_charge
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY account_id
        ORDER BY totalAmount DESC,totalCharge DESC
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="countStatisticalAccountByExample"
            parameterType="com.toby.pay.model.mybatis.VTradeOrderExample"
            resultType="java.lang.Long">
        select count(*) from (
        select IFNULL(sum(amount),0) totalAmount
        from v_trade_order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        GROUP BY account_id
        ) result
    </select>
</mapper>