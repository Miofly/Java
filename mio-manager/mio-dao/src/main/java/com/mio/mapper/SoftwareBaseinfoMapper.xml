<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mio.mapper.SoftwareBaseinfoMapper" >
  <resultMap id="BaseResultMap" type="com.mio.pojo.SoftwareBaseinfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="size" property="size" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="package_id" property="packageId" jdbcType="VARCHAR" />
    <result column="package_path" property="packagePath" jdbcType="VARCHAR" />
    <result column="use_type" property="useType" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, size, name, `desc`, version, package_id, package_path, use_type, created_time,
    created_user, update_time, update_user, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mio.pojo.SoftwareBaseinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from software_baseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectInfos" resultMap="BaseResultMap" parameterType="com.mio.pojo.SoftwareBaseinfoExample" >
    SELECT id,name,a.desc,size,use_type FROM software_baseinfo a
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.mio.pojo.SoftwareBaseinfoKey" >
    select 
    <include refid="Base_Column_List" />
    from software_baseinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.mio.pojo.SoftwareBaseinfoKey" >
    delete from software_baseinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mio.pojo.SoftwareBaseinfoExample" >
    delete from software_baseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mio.pojo.SoftwareBaseinfo" >
    insert into software_baseinfo (id, size, name, 
      desc, version, package_id, 
      package_path, use_type, created_time, 
      created_user, update_time, update_user, 
      status)
    values (#{id,jdbcType=INTEGER}, #{size,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{packageId,jdbcType=VARCHAR}, 
      #{packagePath,jdbcType=VARCHAR}, #{useType,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mio.pojo.SoftwareBaseinfo" >
    insert into software_baseinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="packageId != null" >
        package_id,
      </if>
      <if test="packagePath != null" >
        package_path,
      </if>
      <if test="useType != null" >
        use_type,
      </if>
      <if test="createdTime != null" >
        created_time,
      </if>
      <if test="createdUser != null" >
        created_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="size != null" >
        #{size,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="packageId != null" >
        #{packageId,jdbcType=VARCHAR},
      </if>
      <if test="packagePath != null" >
        #{packagePath,jdbcType=VARCHAR},
      </if>
      <if test="useType != null" >
        #{useType,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mio.pojo.SoftwareBaseinfoExample" resultType="java.lang.Integer" >
    select count(*) from software_baseinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update software_baseinfo
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null" >
        desc = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.packageId != null" >
        package_id = #{record.packageId,jdbcType=VARCHAR},
      </if>
      <if test="record.packagePath != null" >
        package_path = #{record.packagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.useType != null" >
        use_type = #{record.useType,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUser != null" >
        created_user = #{record.createdUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update software_baseinfo
    set id = #{record.id,jdbcType=INTEGER},
      size = #{record.size,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      desc = #{record.desc,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      package_id = #{record.packageId,jdbcType=VARCHAR},
      package_path = #{record.packagePath,jdbcType=VARCHAR},
      use_type = #{record.useType,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      created_user = #{record.createdUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mio.pojo.SoftwareBaseinfo" >
    update software_baseinfo
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="packageId != null" >
        package_id = #{packageId,jdbcType=VARCHAR},
      </if>
      <if test="packagePath != null" >
        package_path = #{packagePath,jdbcType=VARCHAR},
      </if>
      <if test="useType != null" >
        use_type = #{useType,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUser != null" >
        created_user = #{createdUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mio.pojo.SoftwareBaseinfo" >
    update software_baseinfo
    set name = #{name,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      package_id = #{packageId,jdbcType=VARCHAR},
      package_path = #{packagePath,jdbcType=VARCHAR},
      use_type = #{useType,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      created_user = #{createdUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and size = #{size,jdbcType=INTEGER}
  </update>

  <select id="selectMaxId" resultType="java.lang.Integer" parameterType="com.mio.pojo.SoftwareTabExample" >
    select max(id) AS id from software_baseinfo
  </select>


</mapper>