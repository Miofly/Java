<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!-- 配置SqlSessionFactory 从spring和mybatis的整合包中获取 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置SqlMapConfig.xml -->
        <property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
        <!--配置mapper接口，数据源-->
        <property name="dataSource" ref="${dataSource}"/>
    </bean>

    <!-- 使用MapperFactoryBean 生成mapper的代理对象 在mybatis和spring的整合包中 -->
    <!--配置 mapper自动扫描器 bean名称就是mapper类型（首字母小写） -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 配置扫描包路径 ，如果扫描多个包路径，中间使用半角逗号分隔，扫描所有dao接口，加到IOC容器中-->
       <property name="basePackage" value="com.mio.search.mapper"/>
        <!-- 配置SqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>